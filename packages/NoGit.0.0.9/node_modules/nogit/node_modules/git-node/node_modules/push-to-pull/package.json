{
  "name": "push-to-pull",
  "version": "0.1.0",
  "description": "Convert a push-filter to a pull-filter (for simple streams)",
  "main": "transform.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/creationix/push-to-pull.git"
  },
  "keywords": [
    "simple-stream",
    "push-filter",
    "stream"
  ],
  "author": {
    "name": "Tim Caswell",
    "email": "tim@creationix.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "a31b6bc8d1233fc30a0aef6ad985b4444856962c",
  "bugs": {
    "url": "https://github.com/creationix/push-to-pull/issues"
  },
  "readme": "push-to-pull\n============\n\nConvert a push-filter to a pull-filter (for simple streams)\n\nUsage is simple.  Define your filter as an `(emit) -> emit` transform where `emit` is `(err, item)`.  Then when you need an `(stream) -> stream` filter, use this module to convert it.\n\n```js\nvar pushToPull = require('push-to-pull');\n\n// Dumb filter that inputs numbers and outputs that many monkeys\n// Encoded as an (emit) -> emit transform filter.\nfunction pushFilter(emit) {\n  return function (item) {\n    if (item === undefined) return emit();\n    for (var i = 1; i <= item; i++) {\n      emit(\"MONKEY \" + i);\n    }  \n  }\n}\n\n// Same filter, but as a (stream) -> stream transform filter\nvar pullFilter = pushToPull(pushFilter);\n```\n",
  "_id": "push-to-pull@0.1.0",
  "dist": {
    "shasum": "286e9aa1dff65f40359a1158a5e57a5c8388bd8d",
    "tarball": "http://registry.npmjs.org/push-to-pull/-/push-to-pull-0.1.0.tgz"
  },
  "_from": "push-to-pull@0.1.0",
  "_npmVersion": "1.2.21",
  "_npmUser": {
    "name": "creationix",
    "email": "tim@creationix.com"
  },
  "maintainers": [
    {
      "name": "creationix",
      "email": "tim@creationix.com"
    }
  ],
  "directories": {},
  "_shasum": "286e9aa1dff65f40359a1158a5e57a5c8388bd8d",
  "_resolved": "https://registry.npmjs.org/push-to-pull/-/push-to-pull-0.1.0.tgz",
  "homepage": "https://github.com/creationix/push-to-pull"
}
